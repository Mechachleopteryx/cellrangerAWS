shell.executable("/bin/bash")

import os 
import glob
import multiprocessing


# Inputs from config.yaml
RNA_SAMPLES = config["RNA_SAMPLES"]
ADT_SAMPLES = config["ADT_SAMPLES"]
ANTIBODIES  = config["ANTIBODIES"]
GENOME      = config["GENOME"]



# Set paths
HOME       = os.path.expanduser("~")
DATA       = os.path.join("/mnt/EBS/DATA")
RESULTS    = os.path.join("/mnt/EBS/RESULTS")
GENOME     = os.path.join(HOME, "PIPELINE/ref", GENOME)
ADT_REF    = os.path.join(HOME, "PIPELINE/totalseq_111518.csv")
CELLRANGER = os.path.join(HOME, "cellranger-3.0.2/cellranger")



# Set sample names
SAMPLES = RNA_SAMPLES
GROUP   = "-".join(RNA_SAMPLES)

if ADT_SAMPLES is not None:
    SAMPLES = [x + "-" + y for x, y in zip(RNA_SAMPLES, ADT_SAMPLES)]

else:
    ADT_SAMPLES = "none"



# Set thread count
N_SAMPLES   = len(RNA_SAMPLES)
N_THREADS   = multiprocessing.cpu_count() - 2
JOB_THREADS = int(N_THREADS / N_SAMPLES)



# Final output files
rule all:
    input:
        expand(
            "{results}/logs/{sample}_count.out",
            results = RESULTS, sample = SAMPLES
        ),
        expand(
            "{results}/logs/{group}_aggr.out",
            results = RESULTS, group = GROUP
       )


include: "cellranger.snake"


